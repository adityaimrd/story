const CACHE_NAME="dicoding-story-app-v1",urlsToCache=["/","/index.html","/styles/main.css","/scripts/bundle.js","https://unpkg.com/leaflet@1.9.4/dist/leaflet.css","https://unpkg.com/leaflet@1.9.4/dist/leaflet.js","https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap","/icons/icon-72x72.png","/icons/icon-96x96.png","/icons/icon-128x128.png","/icons/icon-144x144.png","/icons/icon-152x152.png","/icons/icon-192x192.png","/icons/icon-384x384.png","/icons/icon-512x512.png","/manifest.json","/saved-stories.html"];self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>e.addAll(urlsToCache))).then((()=>self.skipWaiting())).catch((e=>{console.error("Service Worker installation failed:",e)})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.filter((e=>e!==CACHE_NAME)).map((e=>caches.delete(e))))))),self.clients.claim()})),self.addEventListener("fetch",(e=>{const{request:t}=e;t.url.startsWith("https://story-api.dicoding.dev/v1/stories")?e.respondWith(caches.open(CACHE_NAME).then((async e=>{const s=await e.match(t),n=fetch(t).then((async s=>(s.ok&&200===s.status&&e.put(t,s.clone()),s))).catch((e=>(console.error("Fetch failed for API:",e),new Response(JSON.stringify({error:!0,message:"Network unavailable or API fetch failed"}),{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"application/json"})}))));return s||n}))):e.respondWith(caches.match(t).then((e=>e||fetch(t).catch((()=>caches.match("/index.html"))))))})),self.addEventListener("push",(e=>{const t=e.data.json(),s=t.title||"Dicoding Story App",n={body:t.message||"You have a new story!",icon:"/icons/icon-192x192.png",vibrate:[100,50,100],data:{url:t.url||"/"}};e.waitUntil(self.registration.showNotification(s,n))})),self.addEventListener("notificationclick",(e=>{e.notification.close(),e.waitUntil(clients.openWindow(e.notification.data.url))}));