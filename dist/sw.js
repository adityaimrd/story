<<<<<<< HEAD
const CACHE_NAME="dicoding-story-app-v1",urlsToCache=["/","/index.html","/styles/main.css","/scripts/bundle.js","https://unpkg.com/leaflet@1.9.4/dist/leaflet.css","https://unpkg.com/leaflet@1.9.4/dist/leaflet.js","https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap","/icons/icon-72x72.png","/icons/icon-96x96.png","/icons/icon-128x128.png","/icons/icon-144x144.png","/icons/icon-152x152.png","/icons/icon-192x192.png","/icons/icon-384x384.png","/icons/icon-512x512.png","/manifest.json"];self.addEventListener("install",(t=>{t.waitUntil(caches.open(CACHE_NAME).then((t=>t.addAll(urlsToCache))).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.filter((t=>t!==CACHE_NAME)).map((t=>caches.delete(t))))))),self.clients.claim()})),self.addEventListener("fetch",(t=>{const{request:e}=t;e.url.startsWith("https://story-api.dicoding.dev/v1/stories")?t.respondWith(caches.open(CACHE_NAME).then((async t=>{const n=await t.match(e),s=fetch(e).then((async n=>(n.ok&&200===n.status&&t.put(e,n.clone()),n))).catch((t=>(console.error("Fetch failed for API:",t),new Response("{}",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"application/json"})}))));return n||s}))):t.respondWith(caches.match(e).then((t=>t||fetch(e))))})),self.addEventListener("push",(t=>{const e=t.data.json(),n=e.title||"Dicoding Story App",s={body:e.message||"You have a new story!",icon:"/icons/icon-192x192.png",vibrate:[100,50,100],data:{url:e.url||"/"}};t.waitUntil(self.registration.showNotification(n,s))})),self.addEventListener("notificationclick",(t=>{t.notification.close(),t.waitUntil(clients.openWindow(t.notification.data.url))}));
=======
self.addEventListener("push",(t=>{const e=t.data.json(),n=e.title||"Dicoding Story App",s={body:e.message||"You have a new story!",icon:"/icons/icon-192x192.png",vibrate:[100,50,100],data:{url:e.url||"/"}};t.waitUntil(self.registration.showNotification(n,s))})),self.addEventListener("notificationclick",(t=>{t.notification.close(),t.waitUntil(clients.openWindow(t.notification.data.url))}));const CACHE_NAME="dicoding-story-app-v1",urlsToCache=["/","/index.html","/styles/main.css","/scripts/bundle.js","https://unpkg.com/leaflet@1.9.4/dist/leaflet.css","https://unpkg.com/leaflet@1.9.4/dist/leaflet.js","https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap","/icons/icon-72x72.png","/icons/icon-96x96.png","/icons/icon-128x128.png","/icons/icon-144x144.png","/icons/icon-152x152.png","/icons/icon-192x192.png","/icons/icon-384x384.png","/icons/icon-512x512.png","/manifest.json"];self.addEventListener("install",(t=>{t.waitUntil(caches.open(CACHE_NAME).then((t=>t.addAll(urlsToCache))).then((()=>self.skipWaiting())))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.filter((t=>t!==CACHE_NAME)).map((t=>caches.delete(t))))))),self.clients.claim()})),self.addEventListener("fetch",(t=>{const{request:e}=t;e.url.startsWith("https://story-api.dicoding.dev/v1/stories")?t.respondWith(caches.open(CACHE_NAME).then((async t=>{const n=await t.match(e),s=fetch(e).then((async n=>(n.ok&&200===n.status&&t.put(e,n.clone()),n))).catch((t=>(console.error("Fetch failed for API:",t),new Response("{}",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"application/json"})}))));return n||s}))):t.respondWith(caches.match(e).then((t=>t||fetch(e))))}));
>>>>>>> be4e2658dfb507c1ad05bad0fba40d4010e5cb39
